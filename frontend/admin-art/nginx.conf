# server
# {
#     listen 80; #监听80端口
#     server_name localhost; #主机访问容器，所以地址为localhost
#     index index.html; # 默认索引文件，当访问目录时尝试返回index.html
#     root /usr/share/nginx/html; #设置nginx的根目录为/usr/share/nginx/html
#     location / {
#         try_files $uri $uri/ /index.html; #先找uri，再找uri为前缀下的文件，最后找不到返回index.html
#     }
# }


# worker_processes 1;
# events {
#     worker_connections 1024;
# }
# http {
#     sendfile on;
#     tcp_nodelay on;
#     keepalive_timeout 30;
#     include /etc/nginx/mime.types;
#     default_type application/octet-stream;
#     server {
#         listen 80;
#         server_name localhost;
#         root /usr/share/nginx/front/dist;
#         autoindex on;
#         autoindex_exact_size off;
#         autoindex_localtime on;
#         location / {
#             try_files $uri $uri/ =404;
#             index index.html index.htm;
#             gzip_static on;
#             expires max;
#             add_header Cache-Control public;
#             if ($request_filename ~* ^.*?\.(eot)|(ttf)|(woff)|(svg)|(otf)$) {
#                 add_header Access-Control-Allow-Origin *;
#             }
#         }
#     }
# }
# 定义Nginx用户和工作进程数量
user nginx;
worker_processes auto;

worker_rlimit_nofile 51200;

# 指定错误日志的位置和级别
error_log /var/log/nginx/error.log warn;
# 存储Nginx进程ID的文件路径
pid /var/run/nginx.pid;

# 事件模块配置
events {
    # 使用epoll事件模型，适用于Linux系统
    use epoll;
    # 每个worker进程可以同时处理的最大连接数
    worker_connections 51200;
    # 启用多重接收，允许在一个事件循环中处理多个连接
    # 这可以提高性能，尤其是在高并发的情况下
    multi_accept on;
}

# HTTP模块配置
http {
    # 包含MIME类型定义文件
    include /etc/nginx/mime.types;
    # 默认文件类型
    default_type application/octet-stream;

    # 定义日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    # 指定访问日志的位置和格式
    access_log /var/log/nginx/access.log main;

    # 启用高效文件传输模式
    sendfile on;

    # 设置keep-alive连接的超时时间
    keepalive_timeout 65;

    # 启用TCP快速打开
    tcp_nopush on;
    tcp_nodelay on;

    # fastcgi参数配置
    fastcgi_connect_timeout 300;
    fastcgi_send_timeout 300;
    fastcgi_read_timeout 300;
    fastcgi_buffer_size 64k;
    fastcgi_buffers 4 64k;
    fastcgi_busy_buffers_size 128k;
    fastcgi_temp_file_write_size 256k;
    fastcgi_intercept_errors on;

    # gzip 压缩配置
    gzip on;
    gzip_min_length 1k;
    gzip_buffers 4 16k;
    gzip_http_version 1.1;
    gzip_comp_level 2;
    gzip_types text/plain application/javascript application/x-javascript text/javascript text/css application/xml;
    gzip_vary on;
    gzip_proxied expired no-cache no-store private auth;
    gzip_disable "MSIE [1-6]\.";

    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;

    server_tokens off;
    access_log off;

    # 服务器配置
    server {
        # 监听端口
        listen 80;
        # 服务器名称
        server_name localhost;

        # 位置配置
        location / {
            # 网站文件的根目录
            root /usr/share/nginx/html/dist;
            # 默认索引文件
            index index.html index.htm;
            # 尝试按顺序匹配请求的 URI，如果找不到则返回 index.html，适用于单页应用的路由
            try_files $uri $uri/ /index.html;
        }

        # 定义错误页面
        error_page 500 502 503 504 /50x.html;
        # 配置50x错误页面的路径
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}

