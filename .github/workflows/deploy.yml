name: buildDeployment

on:
    workflow_dispatch: # 添加手动触发事件
    push:
        branches:
            - main
        paths:
            - 'packages/**'

jobs:
    buildDeploymentFrontend:
        runs-on: ubuntu-latest
        environment: Development
        steps:
            - name: 迁出代码
              uses: actions/checkout@main

            - name: 安装Node环境
              uses: actions/setup-node@main
              with:
                  node-version: lts/*

            - name: 设置缓存
              uses: actions/cache@v3
              with:
                  path: ~/.local/share/pnpm/store
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: 安装pnpm
              uses: pnpm/action-setup@v4

            - name: 安装依赖
              run: pnpm install

            - name: 打包项目
              run: pnpm run build:frontend-admin-art

            - name: 上传到服务器
              uses: appleboy/scp-action@master
              with:
                  host: ${{ secrets.SERVER_HOST }}
                  username: root
                  key: ${{ secrets.SERVER_PRIVATE_KEY }}
                  port: 22
                  source: 'packages/frontend/admin-art/dist'
                  target: '/www/wwwroot/logistics_management/frontend/'
                  strip_components: 4

    buildDeploymentBackend:
        runs-on: ubuntu-latest
        environment: Development
        steps:
            - name: 迁出代码
              uses: actions/checkout@main

            - name: 上传到服务器
              uses: appleboy/scp-action@master
              with:
                  host: ${{ secrets.SERVER_HOST }}
                  username: root
                  key: ${{ secrets.SERVER_PRIVATE_KEY }}
                  port: 22
                  source: 'packages/backend'
                  target: '/www/wwwroot/logistics_management/backend/'
                  strip_components: 2

            # - name: 安装依赖并启动服务
            #   run: |
            #       ssh -o StrictHostKeyChecking=no root@${{ secrets.SERVER_HOST }} << 'EOF'
            #       cd /www/wwwroot/logistics_management/backend
            #       pnpm install --prod --filter backend
            #       pm2 restart backend || pm2 start dist/index.js --name backend
            #       EOF
