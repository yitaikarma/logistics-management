datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "./client" // default is ./node_modules/@prisma/client
}

generator zod {
  provider                         = "zod-prisma-types"
  output                           = "./zod" // default is ./generated/zod
  useMultipleFiles                 = false // default is false
  writeBarrelFiles                 = false // default is true
  createInputTypes                 = false // default is true
  createModelTypes                 = true // default is true
  addInputTypeValidation           = false // default is true
  addIncludeType                   = false // default is true
  addSelectType                    = false // default is true
  validateWhereUniqueInput         = false // default is true
  createOptionalDefaultValuesTypes = false // default is false
  createRelationValuesTypes        = false // default is false
  createPartialTypes               = false // default is false
  useDefaultValidators             = true // default is true
  coerceDate                       = false // default is true
  writeNullishInModelTypes         = true // default is false
  // prismaClientPath                 = "./path/to/prisma/client" // default is client output path
}

model User {
  id         Int         @id @default(autoincrement()) @db.UnsignedInt
  username   String?     @unique @db.VarChar(255)
  email      String?     @db.VarChar(255)
  phone      String?     @db.VarChar(255)
  password   String?     @db.VarChar(255)
  role       Int?        @default(0) @db.UnsignedTinyInt
  gender     Int?        @default(0) @db.TinyInt
  nickname   String?     @db.VarChar(255)
  avatar     String?     @db.VarChar(255)
  address    String?     @db.VarChar(255)
  desc       String?     @db.Text
  status     Int?        @default(0) @db.UnsignedTinyInt
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  roleId     Int?        @db.UnsignedInt
  roleObj    Role?       @relation(fields: [roleId], references: [id])
  warehouses Warehouse[]
  vehicles   Vehicle[]
  orders     Order[]
  tasks      Task[]

  @@index([email])
  @@index([username])
  @@index([phone])
  @@index([role])
}

model Role {
  id             Int      @id @default(autoincrement()) @db.UnsignedInt
  name           String   @unique @db.VarChar(255)
  value          Int      @db.UnsignedTinyInt
  pageAuthString String?  @db.Text
  desc           String?  @db.Text
  status         Int      @default(0) @db.UnsignedTinyInt
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  User           User[]

  @@index([name])
  @@index([value])
}

model Login_Log {
  id        Int      @id @default(autoincrement()) @db.UnsignedInt
  email     String   @unique @db.VarChar(255)
  browser   Int      @db.UnsignedTinyInt
  ip        String   @db.VarChar(255)
  status    Int      @default(0) @db.UnsignedTinyInt
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([email])
}

model System_Log {
  id            Int      @id @default(autoincrement()) @db.UnsignedInt
  account       String   @unique @db.VarChar(255)
  business_type String   @db.VarChar(255)
  ip            String   @db.VarChar(255)
  method        String   @db.VarChar(255)
  module        String   @db.VarChar(255)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([account])
  @@index([business_type])
  @@index([ip])
  @@index([module])
}

model Commodity {
  id               Int                @id @default(autoincrement()) @db.UnsignedInt
  name             String             @unique @db.VarChar(255)
  price            Float              @default(0) @db.Float
  desc             String?            @db.Text
  status           Int                @default(0) @db.UnsignedTinyInt
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  categoryId       Int?               @db.UnsignedInt
  category         CommodityCategory? @relation(fields: [categoryId], references: [id])
  inventoryRecords InventoryRecord[]
  inventories      Inventory[]

  @@index([name])
}

model CommodityCategory {
  id          Int         @id @default(autoincrement()) @db.UnsignedInt
  name        String      @unique @db.VarChar(255)
  desc        String?     @db.Text
  status      Int         @default(0) @db.UnsignedTinyInt
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  commodities Commodity[]

  @@index([name])
}

model Warehouse {
  id                 Int                  @id @default(autoincrement()) @db.UnsignedInt
  name               String               @unique @db.VarChar(255)
  province           String               @db.VarChar(255)
  city               String               @db.VarChar(255)
  district           String               @db.VarChar(255)
  address            String?              @db.VarChar(255)
  desc               String?              @db.Text
  status             Int                  @default(0) @db.UnsignedTinyInt
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  userId             Int?                 @db.UnsignedInt
  username           String?              @db.VarChar(255)
  user               User?                @relation(fields: [userId], references: [id])
  categoryId         Int?                 @db.UnsignedInt
  category           WarehouseCategory?   @relation(fields: [categoryId], references: [id])
  inventoryRecords   InventoryRecord[]
  InventoryExtension InventoryExtension[]
  Order              Order[]

  @@index([name])
  @@index([userId])
}

model WarehouseCategory {
  id         Int         @id @default(autoincrement()) @db.UnsignedInt
  name       String      @unique @db.VarChar(255)
  desc       String?     @db.Text
  status     Int         @default(0) @db.UnsignedTinyInt
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  warehouses Warehouse[]

  @@index([name])
}

model Inventory {
  id                  Int                  @id @default(autoincrement()) @db.UnsignedInt
  total               Int                  @default(0) @db.UnsignedInt
  desc                String?              @db.Text
  status              Int                  @default(0) @db.UnsignedTinyInt
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  commodityId         Int?                 @db.UnsignedInt
  commodity           Commodity?           @relation(fields: [commodityId], references: [id])
  inventoryExtensions InventoryExtension[]
  Order               Order[]
}

model InventoryExtension {
  id          Int        @id @default(autoincrement()) @db.UnsignedInt
  total       Int        @default(0) @db.UnsignedInt
  desc        String?    @db.Text
  status      Int        @default(0) @db.UnsignedTinyInt
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  warehouseId Int?       @db.UnsignedInt
  warehouse   Warehouse? @relation(fields: [warehouseId], references: [id])
  inventoryId Int?       @db.UnsignedInt
  Inventory   Inventory? @relation(fields: [inventoryId], references: [id])

  @@index([warehouseId])
  @@index([inventoryId])
}

model InventoryRecord {
  id          Int        @id @default(autoincrement()) @db.UnsignedInt
  type        Int        @default(0) @db.TinyInt
  total       Int        @default(0) @db.UnsignedInt
  desc        String?    @db.Text
  status      Int        @default(0) @db.UnsignedTinyInt
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  warehouseId Int?       @db.UnsignedInt
  warehouse   Warehouse? @relation(fields: [warehouseId], references: [id])
  commodityId Int?       @db.UnsignedInt
  commodity   Commodity? @relation(fields: [commodityId], references: [id])

  @@index([type])
  @@index([warehouseId])
  @@index([commodityId])
}

model Vehicle {
  id         Int              @id @default(autoincrement()) @db.UnsignedInt
  name       String           @unique @db.VarChar(255)
  license    String           @unique @db.VarChar(255)
  desc       String?          @db.Text
  status     Int              @default(0) @db.UnsignedTinyInt
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @updatedAt
  userId     Int?             @db.UnsignedInt
  username   String?          @db.VarChar(255)
  user       User?            @relation(fields: [userId], references: [id])
  categoryId Int?             @db.UnsignedInt
  category   VehicleCategory? @relation(fields: [categoryId], references: [id])

  @@index([name])
  @@index([userId])
}

model VehicleCategory {
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  name      String    @unique @db.VarChar(255)
  desc      String?   @db.Text
  status    Int       @default(0) @db.UnsignedTinyInt
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  vehicles  Vehicle[]

  @@index([name])
}

model Employee {
  id         Int      @id @default(autoincrement()) @db.UnsignedInt
  name       String   @db.VarChar(255)
  gender     Int      @default(0) @db.TinyInt
  id_card    String   @unique @db.VarChar(255)
  phone      String?  @unique @db.VarChar(255)
  address    String?  @db.VarChar(255)
  desc       String?  @db.Text
  department Int      @default(0) @db.TinyInt
  status     Int      @default(0) @db.UnsignedTinyInt
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([id, name])
  @@index([name])
}

model Order {
  id           Int            @id @default(autoincrement()) @db.UnsignedInt
  fromProvince String?        @db.VarChar(255)
  fromCity     String?        @db.VarChar(255)
  fromDistrict String?        @db.VarChar(255)
  fromAddress  String?        @db.VarChar(255)
  toProvince   String         @db.VarChar(255)
  toCity       String         @db.VarChar(255)
  toDistrict   String         @db.VarChar(255)
  toAddress    String?        @db.VarChar(255)
  receiver     String         @db.VarChar(255)
  phone        String         @db.VarChar(255)
  total        Int            @default(0) @db.UnsignedInt
  desc         String?        @db.Text
  status       Int            @default(0) @db.UnsignedTinyInt
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  inventoryId  Int?           @db.UnsignedInt
  inventory    Inventory?     @relation(fields: [inventoryId], references: [id])
  warehouseId  Int?           @db.UnsignedInt
  warehouse    Warehouse?     @relation(fields: [warehouseId], references: [id])
  userId       Int?           @db.UnsignedInt
  user         User?          @relation(fields: [userId], references: [id])
  categoryId   Int?           @db.UnsignedInt
  category     OrderCategory? @relation(fields: [categoryId], references: [id])

  @@index([userId])
}

model OrderCategory {
  id        Int      @id @default(autoincrement()) @db.UnsignedInt
  name      String   @unique @db.VarChar(255)
  desc      String?  @db.Text
  status    Int      @default(0) @db.UnsignedTinyInt
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]

  @@index([name])
}

model Task {
  id         Int           @id @default(autoincrement()) @db.UnsignedInt
  name       String        @unique @db.VarChar(255)
  desc       String?       @db.Text
  startTime  DateTime?
  endTime    DateTime?
  status     Int           @default(0) @db.UnsignedTinyInt
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  userId     Int?          @db.UnsignedInt
  username   String?       @db.VarChar(255)
  user       User?         @relation(fields: [userId], references: [id])
  categoryId Int?          @db.UnsignedInt
  category   TaskCategory? @relation(fields: [categoryId], references: [id])

  @@index([name])
  @@index([userId])
}

model TaskCategory {
  id        Int      @id @default(autoincrement()) @db.UnsignedInt
  name      String   @unique @db.VarChar(255)
  desc      String?  @db.Text
  status    Int      @default(0) @db.UnsignedTinyInt
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tasks     Task[]

  @@index([name])
}

model Distribution {
  id         Int                   @id @default(autoincrement()) @db.UnsignedInt
  name       String                @unique @db.VarChar(255)
  desc       String?               @db.Text
  status     Int                   @default(0) @db.UnsignedTinyInt
  createdAt  DateTime              @default(now())
  updatedAt  DateTime              @updatedAt
  categoryId Int?                  @db.UnsignedInt
  category   DistributionCategory? @relation(fields: [categoryId], references: [id])

  @@index([name])
}

model DistributionCategory {
  id            Int            @id @default(autoincrement()) @db.UnsignedInt
  name          String         @unique @db.VarChar(255)
  desc          String?        @db.Text
  status        Int            @default(0) @db.UnsignedTinyInt
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  distributions Distribution[]

  @@index([name])
}
